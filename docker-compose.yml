version: '2'

#export IP_ADDRESS_INSIDE_DOCKER=$(ifconfig docker0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}')
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        network_mode: host
        ports:
            - "2181:2181"
        environment:
            # Leaving space between 'colon' and value causes error!
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:latest
        network_mode: host
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_LOG_DIRS: /var/logs/kafka            
            KAFKA_ZOOKEEPER_CONNECT: ${DOCKER_MACHINE_IP}:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${DOCKER_MACHINE_IP}:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        volumes_from:
            - logs_data            

    mongo:
        image: mongo:latest
        network_mode: host
        volumes_from:
            - mongo_data
        ports:
            - "27017:27017"
        environment:            
            MONGO_DATA_DIR: /data/db
            MONGO_LOG_DIR: /dev/null
            DOCKER_MACHINE_IP: ${DOCKER_MACHINE_IP}
           
    redis:
        image: redis:latest
        network_mode: host
        command: redis-server
        hostname: redis
        volumes_from:
            - redis_data
        ports:
            - "6379:6379"            

    celery:
        build: .
        network_mode: host
        command: celery worker -l debug -A uggipuggi.celery.celery -n worker.high -Q high
        depends_on:
            - redis
        environment:
            DOCKER_MACHINE_IP: ${DOCKER_MACHINE_IP}
            KAFKA_BOOTSTRAP_SERVERS: ${DOCKER_MACHINE_IP}:9092
            CELERY_BROKER_URL: redis://${DOCKER_MACHINE_IP}:6379/0
            CELERY_RESULT_BACKEND: redis://${DOCKER_MACHINE_IP}:6379/0
        volumes_from:
            - logs_data
            
    kafka_consumer:
        build: .
        network_mode: host
        depends_on:
            - kafka
            - redis
            - zookeeper
        command: python3 uggipuggi/messaging/subscriber/recipe_kafka_collection_post_subscriber.py
        environment:
            DOCKER_MACHINE_IP: ${DOCKER_MACHINE_IP}
            KAFKA_BOOTSTRAP_SERVERS: ${DOCKER_MACHINE_IP}:9092
        volumes_from:
            - logs_data

    backend:
        build: .
        network_mode: host
        command: 
             gunicorn -b 0.0.0.0:8000
            --access-logfile -
            --reload
            "manage:uggipuggi.app"
        depends_on:
            - redis
            - mongo
            - celery
            - kafka
            - zookeeper
            - kafka_consumer
        ports:
            - "8000:8000"
        environment:
            DOCKER_MACHINE_IP: ${DOCKER_MACHINE_IP}
        volumes_from:
            - logs_data             

    # Create volume container for mongodb
    # docker create -v /var/database/mongodb/data --name mongo_data debian:jessie-slim
    # docker create -v /var/database/redis/data   --name redis_data debian:jessie-slim
    # docker create -v /var/logs                  --name  logs_data debian:jessie-slim
    mongo_data:
        image: debian:jessie-slim
        network_mode: host
        #command: echo I'm a Mongodb data container
        volumes:
            - /data/db
            - /data/configdb
            - /var/lib/mongodb/
            
    redis_data:
        image: debian:jessie-slim
        network_mode: host
        #command: echo I'm a Redis data container
        volumes:
            - /var/lib/redis/
            
    logs_data:
        image: debian:jessie-slim
        network_mode: host
        #command: echo I'm a logs data container
        volumes:
            - /var/logs
            - /var/logs/kafka
            - /var/logs/zookeeper
            - /var/logs/uggipuggi/nginx/
        
        